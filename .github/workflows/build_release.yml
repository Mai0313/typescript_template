name: Build and Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions: write-all

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.runner }} - ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}

    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: macos-14
            target: darwin-arm64
            friendly_id: macos-arm64
          - runner: macos-14
            target: darwin-x64
            friendly_id: macos-x64
          - runner: ubuntu-24.04
            target: linux-x64
            friendly_id: linux-x64
          - runner: ubuntu-24.04-arm
            target: linux-arm64
            friendly_id: linux-arm64
          - runner: windows-latest
            target: win-x64
            friendly_id: windows-x64
          - runner: windows-11-arm
            target: win-arm64
            friendly_id: windows-arm64

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Package with pkg
        run: |
          npm install -g @yao-pkg/pkg
          pkg . --targets node20-${{ matrix.target }} --output dist/${{ matrix.target }}/${{ github.event.repository.name }}

      - name: Create .zip (Windows)
        shell: powershell
        if: ${{ startsWith(matrix.runner, 'windows') }}
        run: |
          $ErrorActionPreference = "Stop"
          $dest = "dist/${{ matrix.target }}"
          $version = "${env:GITHUB_REF_NAME}".Substring(1)
          $bin = "${{ github.event.repository.name }}.exe"
          $zip = "${{ github.event.repository.name }}-v$version-${{ matrix.friendly_id }}.zip"
          Compress-Archive -Path "$dest\$bin" -DestinationPath "$dest\$zip" -Force

      - name: Create .tar.gz (Unix)
        shell: bash
        if: ${{ !startsWith(matrix.runner, 'windows') }}
        run: |
          set -euo pipefail
          dest="dist/${{ matrix.target }}"
          version="${GITHUB_REF_NAME#v}"
          bin="${{ github.event.repository.name }}"
          archive="${{ github.event.repository.name }}-v${version}-${{ matrix.friendly_id }}.tar.gz"
          tar -C "$dest" -czf "$dest/${archive}" "${bin}"
          rm -f "$dest/${bin}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.friendly_id }}
          path: dist/${{ matrix.target }}/*
          if-no-files-found: error
          retention-days: 7
          compression-level: 6
          overwrite: true

  package:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Generate Changelog
        run: |
          npm install -g git-cliff
          git cliff --output CHANGELOG.md

      - name: Publish to NPM
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./dist/*
          name: ${{ github.event.repository.name }}-dist
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6
          overwrite: true

  release:
    name: Release Package
    needs:
      - build
      - package
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*
