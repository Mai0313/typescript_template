help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files and caches
	rm -rf dist coverage .cache node_modules docs/api .eslintcache
	find . -type f -name "*.DS_Store" -ls -delete
	find . -type f -name "*.tsbuildinfo" -delete
	git fetch --prune
	git gc --prune=now --aggressive

install:  ## Install dependencies
	npm install

format: ## Run prettier and ESLint
	npm run format
	npm run lint

format-check: ## Check formatting without fixing
	npm run format:check
	npm run lint:nofix

build: ## Build the project
	npm run build

dev: ## Run in development mode
	npm run dev

cli: ## Run CLI
	npm run cli

test: ## Run tests
	npm test

test-coverage: ## Run tests with coverage
	npm run test:coverage

test-ui: ## Run tests with UI
	npm run test:ui

type-check: ## Run TypeScript type checking
	npm run type-check

check: ## Run all checks (type-check, format, lint)
	npm run check

gen-docs:  ## Generate documentation
	npm run docs:generate

serve-docs: ## Serve documentation
	npm run docs:serve

submodule-init: ## Install and update all submodules
	git submodule update --recursive --init

submodule-update:  ## Update all submodules
	git submodule update --recursive --remote

docker-build: ## Build Docker image
	docker build -f docker/Dockerfile -t ts-template .

docker-run: ## Run Docker container
	docker compose up -d app

docker-down: ## Stop Docker containers
	docker compose down

docker-logs: ## View Docker logs
	docker compose logs -f

.PHONY: help clean install format format-check build dev cli test test-coverage test-ui type-check check gen-docs serve-docs submodule-init submodule-update docker-build docker-run docker-down docker-logs
